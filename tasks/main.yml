---

- name: Reset all docker installations
  become: true
  when: reset_before
  block:
    - name: "CentOS: Remove all docker packages"
      ansible.builtin.yum:
        autoremove: true
        state: absent
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
      when: ansible_distribution == "CentOS"

    - name: "Ubuntu: Remove and purge all docker packages"
      when: ansible_distribution == "Ubuntu"
      block:
        - name: Remove packages
          ansible.builtin.apt:
            purge: true
            state: absent
            pkg:
              - docker
              - docker-engine
              - docker-ce-cli
              - docker-ce-rootless-extras
              - docker-scan-plugin
              - docker.io
              - containerd
              - runc
              - docker-compose-plugin
              - docker-compose
        - name: Remove dependencies that are no longer required
          ansible.builtin.apt:
            autoremove: true

    - name: Remove all docker ressource files
      ansible.builtin.file:
        name: /var/lib/docker
        state: absent

    - name: Remove docker etc configs files
      ansible.builtin.file:
        name: /etc/docker
        state: absent
    - name: Remove docker apparmor files
      ansible.builtin.file:
        name: /etc/apparmor.d/docker
        state: absent

    - name: Delete docker group
      ansible.builtin.group:
        name: docker
        state: absent

    - name: Remove docker sock
      ansible.builtin.file:
        name: /var/run/docker.sock
        state: absent

    - name: Remove docker.list file
      ansible.builtin.file:
        name: /etc/apt/sources.list.d/docker.list
        state: absent


- name: Install docker on hosts
  block:
    - name: "Check docker installation"
      ansible.builtin.service:
        name: docker
        state: started
  rescue:
    - name: Install Docker on CentOS
      ansible.builtin.include_tasks: centos_deploy.yml
      when: ansible_distribution == "CentOS"

    - name: Install Docker on Ubuntu
      ansible.builtin.include_tasks: ubuntu_deploy.yml
      when: ansible_distribution == "Ubuntu"

    - name: Start and Enable Docker daemon service
      become: true
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Add the current user to the docker group
      become: true
      ansible.builtin.user:
        name: "{{ ansible_ssh_user }}"
        groups: docker
        append: true
        state: present

    - name: Install python3-pip
      become: true
      ansible.builtin.package:
        name: python3-pip
        state: present

    - name: Install docker-py
      become: true
      ansible.builtin.pip:
        name: docker
        executable: pip3

    - name: Check docker installation
      become: true
      community.docker.docker_container:
        name: hello-world
        image: hello-world
        auto_remove: true

- name: Add docker compose
  when: docker_compose
  block:
    - name: "Ubuntu: docker-compose installation"
      become: true
      ansible.builtin.apt:
        pkg:
          - docker-compose-plugin
      when: ansible_distribution == "Ubuntu"
    - name: "Centos: docker-compose installation"
      become: true
      ansible.builtin.yum:
        state: present
        name:
          - docker-compose-plugin
      when: ansible_distribution == "CentOS"
